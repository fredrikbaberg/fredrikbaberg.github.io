<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fredrik Baberg | Personal page</title>
    <link>https://baberg.nu/personal/en/author/fredrik-baberg/</link>
      <atom:link href="https://baberg.nu/personal/en/author/fredrik-baberg/index.xml" rel="self" type="application/rss+xml" />
    <description>Fredrik Baberg</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>©Fredrik Båberg 2020</copyright><lastBuildDate>Tue, 11 Aug 2020 20:12:00 +0200</lastBuildDate>
    <image>
      <url>https://baberg.nu/personal/en/author/fredrik-baberg/avatar_hu52a603635ecebd45650b162dadabb4e5_12861_270x270_fill_q90_lanczos_center.jpg</url>
      <title>Fredrik Baberg</title>
      <link>https://baberg.nu/personal/en/author/fredrik-baberg/</link>
    </image>
    
    <item>
      <title>InfluxDB and retention</title>
      <link>https://baberg.nu/personal/en/post/influxdb-retention/</link>
      <pubDate>Tue, 11 Aug 2020 20:12:00 +0200</pubDate>
      <guid>https://baberg.nu/personal/en/post/influxdb-retention/</guid>
      <description>&lt;p&gt;I recently encountered an issue where my backup of Home Assistant took to much space compared to what I had available. One reason could be that I stored all data in InfluxDB, without any retention policy. After purging all the data from InfluxDB the backup size went from 4GB to 500MB, and backups were faster.&lt;/p&gt;
&lt;p&gt;I found the following thread with an example of retention policies which I based my setup on: 
&lt;a href=&#34;https://monitoring-portal.org/t/retention-policies-and-continuous-queries-made-simple/1792&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://monitoring-portal.org/t/retention-policies-and-continuous-queries-made-simple/1792&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the new setup there is a separate database, &lt;code&gt;archive&lt;/code&gt; used for long-term storage, while the raw data is purged after 7 days. &lt;code&gt;archive&lt;/code&gt; has three levels with different granularity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sampled with mean of five minutes, for shorter timespan.&lt;/li&gt;
&lt;li&gt;Sampled with mean of 30 minutes, for medium timespan.&lt;/li&gt;
&lt;li&gt;Sampled with mean of 1 hour, for longer time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;setup-in-influxdb&#34;&gt;Setup in InfluxDB&lt;/h3&gt;
&lt;p&gt;The following commands are entered under &lt;em&gt;Explore&lt;/em&gt; in Chronograf, which is the graphical user interface I get with InfluxDB as Home Assistant addon.&lt;/p&gt;
&lt;h4 id=&#34;first-level&#34;&gt;First level&lt;/h4&gt;
&lt;p&gt;First level is for incoming data, which is sampled to five minutes using mean value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CREATE DATABASE &amp;ldquo;archive&amp;rdquo; WITH DURATION 1d1h&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For each domain and instance of Home Assistant I use one continuous query.
My two instances are called &lt;em&gt;homeassistant&lt;/em&gt; and &lt;em&gt;homeassistantpissd&lt;/em&gt; (Home Assistant running on a Raspberry Pi with an SSD).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistantpissd_sensor&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(&amp;quot;value&amp;quot;) AS &amp;quot;value&amp;quot;, mean(&amp;quot;battery_level&amp;quot;) AS battery_level
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;sensor&amp;quot;
    FROM &amp;quot;homeassistantpissd&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;sensor&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistant_binary_sensor&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(&amp;quot;value&amp;quot;) AS &amp;quot;value&amp;quot;, mean(&amp;quot;voltage&amp;quot;) AS &amp;quot;voltage&amp;quot;, mean(&amp;quot;temperature&amp;quot;) AS &amp;quot;temperature&amp;quot;, mean(&amp;quot;on&amp;quot;) AS &amp;quot;on&amp;quot;, mean(&amp;quot;battery_level&amp;quot;) AS &amp;quot;battery_level&amp;quot;
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;binary_sensor&amp;quot;
    FROM &amp;quot;homeassistant&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;binary_sensor&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistant_fan&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(&amp;quot;value&amp;quot;) AS &amp;quot;value&amp;quot;, mean(&amp;quot;aqi&amp;quot;) AS &amp;quot;aqi&amp;quot;, mean(&amp;quot;filter_hours_used&amp;quot;) AS &amp;quot;filter_hours_used&amp;quot;, mean(&amp;quot;filter_life_remaining&amp;quot;) AS &amp;quot;filter_life_remaining&amp;quot;, mean(&amp;quot;humidity&amp;quot;) AS &amp;quot;humidity&amp;quot;, mean(&amp;quot;illuminance&amp;quot;) AS &amp;quot;illuminance&amp;quot;, mean(&amp;quot;motor_speed&amp;quot;) AS &amp;quot;motor_speed&amp;quot;, mean(&amp;quot;temperature&amp;quot;) AS &amp;quot;temperature&amp;quot;
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;fan&amp;quot;
    FROM &amp;quot;homeassistant&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;fan&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistant_person&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT last(&amp;quot;state&amp;quot;) AS &amp;quot;state&amp;quot;, median(&amp;quot;latitude&amp;quot;) AS &amp;quot;latitude&amp;quot;, median(&amp;quot;longitude&amp;quot;) AS &amp;quot;longitude&amp;quot;
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;person&amp;quot;
    FROM &amp;quot;homeassistant&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;person&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistant_sensor&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(&amp;quot;value&amp;quot;) AS &amp;quot;value&amp;quot;, mean(&amp;quot;battery_level&amp;quot;) AS battery_level, mean(&amp;quot;temperature&amp;quot;) AS temperature
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;sensor&amp;quot;
    FROM &amp;quot;homeassistant&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;sensor&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CREATE CONTINUOUS QUERY &amp;quot;cq_5m_homeassistant_weather&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(&amp;quot;humidity&amp;quot;) AS &amp;quot;humidity&amp;quot;, mean(&amp;quot;pressure&amp;quot;) AS &amp;quot;pressure&amp;quot;, last(&amp;quot;state&amp;quot;) AS &amp;quot;state&amp;quot;, mean(&amp;quot;temperature&amp;quot;) AS &amp;quot;temperature&amp;quot;, mean(&amp;quot;wind_bearing&amp;quot;) AS &amp;quot;wind_bearing&amp;quot;, mean(&amp;quot;wind_speed&amp;quot;) AS &amp;quot;wind_speed&amp;quot;
    INTO &amp;quot;archive&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;weather&amp;quot;
    FROM &amp;quot;homeassistant&amp;quot;.&amp;quot;autogen&amp;quot;.&amp;quot;weather&amp;quot;
    GROUP BY time(5m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;second-level&#34;&gt;Second level&lt;/h4&gt;
&lt;p&gt;The second level keeps data for one week, sampled to 30 minutes. For simplicity I use &lt;code&gt;mean(*)&lt;/code&gt; instead of writing each entry, this has the disadvantage that data will be prefixed by &lt;code&gt;mean&lt;/code&gt;, e.g. &lt;code&gt;value&lt;/code&gt; will be called &lt;code&gt;mean_value&lt;/code&gt;.
This is only for sensor, separate CQs need to be configured for other data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE RETENTION POLICY &amp;quot;rp_1_week&amp;quot; ON &amp;quot;archive&amp;quot; DURATION 1w1d REPLICATION 1
CREATE CONTINUOUS QUERY &amp;quot;cq_into_1_week_sensor&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(*)
    INTO &amp;quot;rp_1_week&amp;quot;.&amp;quot;sensor&amp;quot;
    FROM &amp;quot;autogen&amp;quot;.&amp;quot;sensor&amp;quot;
    GROUP BY time(30m),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;third-level&#34;&gt;Third level&lt;/h4&gt;
&lt;p&gt;The third and final level is kept infinitely, where the mean value of 1 hour is used. Data here will be called &lt;code&gt;mean_mean_value&lt;/code&gt; due to the wildcard.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE RETENTION POLICY &amp;quot;rp_infinite&amp;quot; ON &amp;quot;archive&amp;quot; DURATION INF REPLICATION 1
CREATE CONTINUOUS QUERY &amp;quot;cq_into_infinity_sensor&amp;quot; ON &amp;quot;archive&amp;quot; BEGIN
    SELECT mean(*)
    INTO &amp;quot;archive&amp;quot;.&amp;quot;rp_infinite&amp;quot;.&amp;quot;sensor&amp;quot;
    FROM &amp;quot;archive&amp;quot;.&amp;quot;rp_1_week&amp;quot;.&amp;quot;sensor&amp;quot;
    GROUP BY time(1h),*
END
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;improvements&#34;&gt;Improvements&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m currently more or less running the above setup, but with all duration for retention policy on &lt;code&gt;archive&lt;/code&gt; set to &lt;code&gt;INF&lt;/code&gt;. Raw data will still be deleted after 7 days. I&amp;rsquo;ll let this run for a week or so before I decide if I need to make any modifications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alpine Linux and Proxmox</title>
      <link>https://baberg.nu/personal/en/post/alpine-proxmox/</link>
      <pubDate>Wed, 27 May 2020 14:54:00 +0200</pubDate>
      <guid>https://baberg.nu/personal/en/post/alpine-proxmox/</guid>
      <description>&lt;p&gt;Since I sometimes setup new Alpine Linux VMs in Proxmox, I thought I would document the base setup I use. In this case install of Qemu Guest Agent and Docker.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create VM with Alpine Linux, remember to enable &lt;code&gt;qemu-agent&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For Qemu Guest Agent:
&lt;ul&gt;
&lt;li&gt;Install Qemu Guest Agent through &lt;code&gt;apk add --no-cache qemu-guest-agent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;rc-update add local default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create file &lt;code&gt;/etc/local.d/Qemu.start&lt;/code&gt; with content (make sure to check port, it could be something else):
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/bin/sh
qemu-ga -d -p /dev/vport1p1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make file executable &lt;code&gt;chmod +x /etc/local.d/Qemu.start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For Docker
&lt;ul&gt;
&lt;li&gt;Uncomment &lt;code&gt;community&lt;/code&gt; from &lt;code&gt;/etc/apk/repositories&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install through &lt;code&gt;apk add --no-cache docker docker-compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Launch daemon at boot through &lt;code&gt;rc-update add docker boot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ZeroTier-One</title>
      <link>https://baberg.nu/personal/en/post/zerotier/</link>
      <pubDate>Wed, 27 May 2020 13:42:00 +0200</pubDate>
      <guid>https://baberg.nu/personal/en/post/zerotier/</guid>
      <description>&lt;p&gt;As an alternative to running a VPN connection, I&amp;rsquo;m now trying ZeroTier-One.&lt;/p&gt;
&lt;p&gt;This is how I made it work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add community repository (uncomment line in &lt;code&gt;/etc/apk/repositories&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;apk add zerotier-one
apk add iptables
/etc/init.d/zerotier-one start
zerotier-cli join #network-id
add &lt;code&gt;net.ipv4.ip_forward = 1&lt;/code&gt; to &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;accept join in 
&lt;a href=&#34;my.zerotier.com&#34;&gt;my.zerotier.com&lt;/a&gt; portal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The create the following script, &lt;code&gt;ZerotierRouting.start&lt;/code&gt; 
&lt;a href=&#34;https://www.reddit.com/r/zerotier/comments/9714a2/easy_way_of_bridging_lan_for_remote_access/?sort=old&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.reddit.com/r/zerotier/comments/9714a2/easy_way_of_bridging_lan_for_remote_access/?sort=old&lt;/a&gt;, remember to replace network interface names with correct names:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/bin/sh
/etc/init.d/zerotier-one start
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -A FORWARD -i eth0 -o ztXXXXXXXX -m state &amp;ndash;state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i ztXXXXXXXX -o eth0 -j ACCEPT&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Enable local.d scripts at boot time and add the script (&lt;a href=&#34;https://unix.stackexchange.com/questions/442020/alpine-linux-run-a-startup-script-to-change-the-etc-issue):&#34;&gt;https://unix.stackexchange.com/questions/442020/alpine-linux-run-a-startup-script-to-change-the-etc-issue):&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rc-update add local default
mv ZerotierRouting.start /etc/local.d/ZerotierRouting.start
chmod +x /etc/local.d/ZerotierRouting.start&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finally, go to 
&lt;a href=&#34;my.zerotier.com&#34;&gt;my.zerotier.com&lt;/a&gt; portal and add a route with destination &lt;code&gt;192.168.1.0/24&lt;/code&gt; &lt;code&gt;(via)&lt;/code&gt; &lt;code&gt;10.1.2.3&lt;/code&gt; (set destination to desired network, via IP to your Alpine Linux/Zerotier IP address).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OctoPrint in Home Assistant</title>
      <link>https://baberg.nu/personal/en/post/octoprint-ha/</link>
      <pubDate>Tue, 28 Apr 2020 08:15:00 +0200</pubDate>
      <guid>https://baberg.nu/personal/en/post/octoprint-ha/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve previously published an addon for 
&lt;a href=&#34;https://home-assistant.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Home Assistant&lt;/a&gt;, enabling the use of OctoPrint on the same device. There is now a version called &amp;ldquo;Experimental&amp;rdquo; which is my latest update. It adds features such as Ingress&lt;/p&gt;
&lt;p&gt;Some of the challenges has been to make Ingress work, which I believe is resolved now, but also to keep the file size low. The latest published version (&lt;code&gt;0.3.0-alpha4&lt;/code&gt;) is using Python3 to save space. I intended to replace &lt;code&gt;supervisord&lt;/code&gt; with &lt;code&gt;s6&lt;/code&gt;, but have not been able to make it run properly.&lt;/p&gt;
&lt;p&gt;The addon is available on 
&lt;a href=&#34;https://github.com/fredrikbaberg/hassio-addons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VPN server on ReadyNAS</title>
      <link>https://baberg.nu/personal/en/post/vpn-on-nas/</link>
      <pubDate>Sun, 11 Feb 2018 17:12:06 +0100</pubDate>
      <guid>https://baberg.nu/personal/en/post/vpn-on-nas/</guid>
      <description>&lt;p&gt;After trying to setup VPN on my current router (which doesn&amp;rsquo;t really support that), I saw that it was possible to install a VPN server on my ReadyNAS. In short, this is how I did:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get the VPN addon, either from the app store on the NAS or from 
&lt;a href=&#34;http://apps.readynas.com/pages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this page&lt;/a&gt;. If it&amp;rsquo;s visible in the app store in ReadyNAS UI, just install it, otherwise you need to upload the .deb file to install it.
&lt;ul&gt;
&lt;li&gt;At first it was a bit unclear to me how to use this addon. A shared folder will be created, called vpnserver, in which there is a setup file for a management tool. Just install this tool, and you should be able to configure the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Since the version is a bit old by now, I wanted to install a newer version. I followed the following 
&lt;a href=&#34;https://community.netgear.com/t5/Current-NETGEAR-and-Partners/How-can-I-update-SoftEther-VPN-App-to-Newest-Version-ReadyNAS/td-p/1070626&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instructions&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;Stop the VPN server using the ReadyNAS web administration tool, since the files will be updated.&lt;/li&gt;
&lt;li&gt;Enable SSH root access. This probably voids your warranty, but since my NAS is a few years by now I&amp;rsquo;m OK with that. There is an option to enable SSH access in the web UI. Don&amp;rsquo;t forget to set an admin password, to be able to sign in.&lt;/li&gt;
&lt;li&gt;SSH into NAS with user &lt;code&gt;root&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install tools for compiling:
&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get install make libc6-dev gcc gdb libtag1-dev uuid-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Download newer version of the VPN server from the softether webpage, to the NAS. From &lt;code&gt;softether&lt;/code&gt; download: VPN Server, Linux, arm-eabi 32-bit in my case (RN104). Not sure for how long the link will work, but just to have examples:
&lt;code&gt;wget http://www.softether-download.com/files/softether/v4.25-9656-rtm-2018.01.15-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unpack the archive into vpnserver folder:
&lt;code&gt;tar -xvf  softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz -C /apps/vpnserver/bin/arm --strip-components=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compile new version:
&lt;code&gt;cd /apps/vpnserver/bin/arm &amp;amp;&amp;amp; ./.install.sh&lt;/code&gt; Note that the filename is &lt;code&gt;.install.sh&lt;/code&gt;, so it is normally hidden.&lt;/li&gt;
&lt;li&gt;Copy the newly compiled files one level up. I&amp;rsquo;m not clear on why this is needed, but it says so.
&lt;code&gt;cp -R /apps/vpnserver/bin/arm/* /apps/vpnserver/bin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Update ownership of the bin folder, since it is now (partially) owned by root.
&lt;code&gt;cd /apps/vpnserver &amp;amp;&amp;amp; chown -R admin:admin bin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove previously downloaded archive (cleanup).
&lt;code&gt;rm ~/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start VPN server again using web UI.&lt;/li&gt;
&lt;li&gt;As the version was updated, make sure to download and run the latest VPN server manager from the &lt;code&gt;softether&lt;/code&gt; website.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
