[{"authors":["admin"],"categories":null,"content":"","date":1590584040,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1590584040,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://baberg.nu/personal/en/author/fredrik-baberg/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/personal/en/author/fredrik-baberg/","section":"authors","summary":"","tags":null,"title":"Fredrik Baberg","type":"authors"},{"authors":["Fredrik Baberg"],"categories":["Proxmox"],"content":"I always forget how to make Alpine Linux appear properly in Proxmox, with qemu guest agent. So here the steps I use are:\n Enable qemu agent in Proxmox In Alpine linux, run the following commands:   apk add qemu-guest-agent\n    mkdir -p /dev/virtio-ports\n    ln -s /dev/vport1p1 /dev/virtio-ports/org.qemu.guest_agent.0\n   ","date":1590584040,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590584040,"objectID":"a05b60f3b8278abc233fe8f13f429e14","permalink":"https://baberg.nu/personal/en/post/2020-05-27-alpine-proxmox/","publishdate":"2020-05-27T14:54:00+02:00","relpermalink":"/personal/en/post/2020-05-27-alpine-proxmox/","section":"post","summary":"Alpine Linux and Proxmox","tags":["Alpine","Proxmox"],"title":"Alpine Linux and Proxmox","type":"post"},{"authors":["Fredrik Baberg"],"categories":["ZeroTier-One"],"content":"As an alternative to running a VPN connection, I\u0026rsquo;m now trying ZeroTier-One.\nThis is how I made it work:\n Add community repository (uncomment line in /etc/apk/repositories)   apk add zerotier-one apk add iptables /etc/init.d/zerotier-one start zerotier-cli join #network-id add net.ipv4.ip_forward = 1 to /etc/sysctl.conf\n  accept join in my.zerotier.com portal  The create the following script, ZerotierRouting.start https://www.reddit.com/r/zerotier/comments/9714a2/easy_way_of_bridging_lan_for_remote_access/?sort=old, remember to replace network interface names with correct names:\n #!/bin/sh /etc/init.d/zerotier-one start iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE iptables -A FORWARD -i eth0 -o ztXXXXXXXX -m state \u0026ndash;state RELATED,ESTABLISHED -j ACCEPT iptables -A FORWARD -i ztXXXXXXXX -o eth0 -j ACCEPT\n Enable local.d scripts at boot time and add the script (https://unix.stackexchange.com/questions/442020/alpine-linux-run-a-startup-script-to-change-the-etc-issue):\n rc-update add local default mv ZerotierRouting.start /etc/local.d/ZerotierRouting.start chmod +x /etc/local.d/ZerotierRouting.start\n Finally, go to my.zerotier.com portal and add a route with destination 192.168.1.0/24 (via) 10.1.2.3 (set destination to desired network, via IP to your Alpine Linux/Zerotier IP address).\n","date":1590579720,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590579720,"objectID":"afae21122448757675b997f18a9bc5c5","permalink":"https://baberg.nu/personal/en/post/2020-05-27-zerotier/","publishdate":"2020-05-27T13:42:00+02:00","relpermalink":"/personal/en/post/2020-05-27-zerotier/","section":"post","summary":"ZeroTier One as VPN Bridge","tags":["ZeroTier-One","VPN"],"title":"ZeroTier-One","type":"post"},{"authors":["Fredrik Baberg"],"categories":["OctoPrint","HomeAssistant","Docker"],"content":"I\u0026rsquo;ve previously published an addon for Home Assistant, enabling the use of OctoPrint on the same device. There is now a version called \u0026ldquo;Experimental\u0026rdquo; which is my latest update. It adds features such as Ingress\nSome of the challenges has been to make Ingress work, which I believe is resolved now, but also to keep the file size low. The latest published version (0.3.0-alpha4) is using Python3 to save space. I intended to replace supervisord with s6, but have not been able to make it run properly.\nThe addon is available on GitHub.\n","date":1588054500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588054500,"objectID":"dee5b3df60aef00f3cbfcf328e4860d3","permalink":"https://baberg.nu/personal/en/post/2020-04-28-octoprint-ha/","publishdate":"2020-04-28T08:15:00+02:00","relpermalink":"/personal/en/post/2020-04-28-octoprint-ha/","section":"post","summary":"Addon for OctoPrint in Home Assistant","tags":["OctoPrint","HomeAssistant"],"title":"OctoPrint in Home Assistant","type":"post"},{"authors":["Fredrik Baberg"],"categories":["ReadyNAS"],"content":"After trying to setup VPN on my current router (which doesn\u0026rsquo;t really support that), I saw that it was possible to install a VPN server on my ReadyNAS. In short, this is how I did:\n Get the VPN addon, either from the app store on the NAS or from this page. If it\u0026rsquo;s visible in the app store in ReadyNAS UI, just install it, otherwise you need to upload the .deb file to install it.  At first it was a bit unclear to me how to use this addon. A shared folder will be created, called vpnserver, in which there is a setup file for a management tool. Just install this tool, and you should be able to configure the server.   Since the version is a bit old by now, I wanted to install a newer version. I followed the following instructions.  Stop the VPN server using the ReadyNAS web administration tool, since the files will be updated. Enable SSH root access. This probably voids your warranty, but since my NAS is a few years by now I\u0026rsquo;m OK with that. There is an option to enable SSH access in the web UI. Don\u0026rsquo;t forget to set an admin password, to be able to sign in. SSH into NAS with user root. Install tools for compiling: apt-get update \u0026amp;\u0026amp; apt-get install make libc6-dev gcc gdb libtag1-dev uuid-dev Download newer version of the VPN server from the softether webpage, to the NAS. From softether download: VPN Server, Linux, arm-eabi 32-bit in my case (RN104). Not sure for how long the link will work, but just to have examples: wget http://www.softether-download.com/files/softether/v4.25-9656-rtm-2018.01.15-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz Unpack the archive into vpnserver folder: tar -xvf softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz -C /apps/vpnserver/bin/arm --strip-components=1 Compile new version: cd /apps/vpnserver/bin/arm \u0026amp;\u0026amp; ./.install.sh Note that the filename is .install.sh, so it is normally hidden. Copy the newly compiled files one level up. I\u0026rsquo;m not clear on why this is needed, but it says so. cp -R /apps/vpnserver/bin/arm/* /apps/vpnserver/bin/ Update ownership of the bin folder, since it is now (partially) owned by root. cd /apps/vpnserver \u0026amp;\u0026amp; chown -R admin:admin bin/ Remove previously downloaded archive (cleanup). rm ~/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz Start VPN server again using web UI. As the version was updated, make sure to download and run the latest VPN server manager from the softether website.    ","date":1518365526,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1518365526,"objectID":"0943e06e8740171c8b9620d8043ba55a","permalink":"https://baberg.nu/personal/en/post/vpn-on-nas/","publishdate":"2018-02-11T17:12:06+01:00","relpermalink":"/personal/en/post/vpn-on-nas/","section":"post","summary":"After trying to setup VPN on my current router (which doesn\u0026rsquo;t really support that), I saw that it was possible to install a VPN server on my ReadyNAS. In short, this is how I did:","tags":["VPN","ReadyNAS"],"title":"VPN server on ReadyNAS","type":"post"}]