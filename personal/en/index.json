[{"authors":["admin"],"categories":null,"content":"","date":1597169520,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1597394760,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://baberg.nu/personal/en/author/fredrik-baberg/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/personal/en/author/fredrik-baberg/","section":"authors","summary":"","tags":null,"title":"Fredrik Baberg","type":"authors"},{"authors":["Fredrik Baberg"],"categories":["HomeAssistant"],"content":"I recently encountered an issue where my backup of Home Assistant took to much space compared to what I had available. One reason could be that I stored all data in InfluxDB, without any retention policy. After purging all the data from InfluxDB the backup size went from 4GB to 500MB, and backups were faster.\nI found the following thread with an example of retention policies which I based my setup on: https://monitoring-portal.org/t/retention-policies-and-continuous-queries-made-simple/1792.\nIn the new setup there is a separate database, archive used for long-term storage, while the raw data is purged after 7 days. archive has three levels with different granularity:\n Sampled with mean of five minutes, for shorter timespan. Sampled with mean of 30 minutes, for medium timespan. Sampled with mean of 1 hour, for longer time.  Setup in InfluxDB The following commands are entered under Explore in Chronograf, which is the graphical user interface I get with InfluxDB as Home Assistant addon.\nFirst level First level is for incoming data, which is sampled to five minutes using mean value.\n CREATE DATABASE \u0026ldquo;archive\u0026rdquo; WITH DURATION 1d1h\n For each domain and instance of Home Assistant I use one continuous query. My two instances are called homeassistant and homeassistantpissd (Home Assistant running on a Raspberry Pi with an SSD).\nCREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistantpissd_sensor\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(\u0026quot;value\u0026quot;) AS \u0026quot;value\u0026quot;, mean(\u0026quot;battery_level\u0026quot;) AS battery_level INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;sensor\u0026quot; FROM \u0026quot;homeassistantpissd\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;sensor\u0026quot; GROUP BY time(5m),* END  CREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistant_binary_sensor\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(\u0026quot;value\u0026quot;) AS \u0026quot;value\u0026quot;, mean(\u0026quot;voltage\u0026quot;) AS \u0026quot;voltage\u0026quot;, mean(\u0026quot;temperature\u0026quot;) AS \u0026quot;temperature\u0026quot;, mean(\u0026quot;on\u0026quot;) AS \u0026quot;on\u0026quot;, mean(\u0026quot;battery_level\u0026quot;) AS \u0026quot;battery_level\u0026quot; INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;binary_sensor\u0026quot; FROM \u0026quot;homeassistant\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;binary_sensor\u0026quot; GROUP BY time(5m),* END  CREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistant_fan\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(\u0026quot;value\u0026quot;) AS \u0026quot;value\u0026quot;, mean(\u0026quot;aqi\u0026quot;) AS \u0026quot;aqi\u0026quot;, mean(\u0026quot;filter_hours_used\u0026quot;) AS \u0026quot;filter_hours_used\u0026quot;, mean(\u0026quot;filter_life_remaining\u0026quot;) AS \u0026quot;filter_life_remaining\u0026quot;, mean(\u0026quot;humidity\u0026quot;) AS \u0026quot;humidity\u0026quot;, mean(\u0026quot;illuminance\u0026quot;) AS \u0026quot;illuminance\u0026quot;, mean(\u0026quot;motor_speed\u0026quot;) AS \u0026quot;motor_speed\u0026quot;, mean(\u0026quot;temperature\u0026quot;) AS \u0026quot;temperature\u0026quot; INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;fan\u0026quot; FROM \u0026quot;homeassistant\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;fan\u0026quot; GROUP BY time(5m),* END  CREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistant_person\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT last(\u0026quot;state\u0026quot;) AS \u0026quot;state\u0026quot;, median(\u0026quot;latitude\u0026quot;) AS \u0026quot;latitude\u0026quot;, median(\u0026quot;longitude\u0026quot;) AS \u0026quot;longitude\u0026quot; INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;person\u0026quot; FROM \u0026quot;homeassistant\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;person\u0026quot; GROUP BY time(5m),* END  CREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistant_sensor\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(\u0026quot;value\u0026quot;) AS \u0026quot;value\u0026quot;, mean(\u0026quot;battery_level\u0026quot;) AS battery_level, mean(\u0026quot;temperature\u0026quot;) AS temperature INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;sensor\u0026quot; FROM \u0026quot;homeassistant\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;sensor\u0026quot; GROUP BY time(5m),* END  CREATE CONTINUOUS QUERY \u0026quot;cq_5m_homeassistant_weather\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(\u0026quot;humidity\u0026quot;) AS \u0026quot;humidity\u0026quot;, mean(\u0026quot;pressure\u0026quot;) AS \u0026quot;pressure\u0026quot;, last(\u0026quot;state\u0026quot;) AS \u0026quot;state\u0026quot;, mean(\u0026quot;temperature\u0026quot;) AS \u0026quot;temperature\u0026quot;, mean(\u0026quot;wind_bearing\u0026quot;) AS \u0026quot;wind_bearing\u0026quot;, mean(\u0026quot;wind_speed\u0026quot;) AS \u0026quot;wind_speed\u0026quot; INTO \u0026quot;archive\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;weather\u0026quot; FROM \u0026quot;homeassistant\u0026quot;.\u0026quot;autogen\u0026quot;.\u0026quot;weather\u0026quot; GROUP BY time(5m),* END  Second level The second level keeps data for one week, sampled to 30 minutes. For simplicity I use mean(*) instead of writing each entry, this has the disadvantage that data will be prefixed by mean, e.g. value will be called mean_value. This is only for sensor, separate CQs need to be configured for other data.\nCREATE RETENTION POLICY \u0026quot;rp_1_week\u0026quot; ON \u0026quot;archive\u0026quot; DURATION 1w1d REPLICATION 1 CREATE CONTINUOUS QUERY \u0026quot;cq_into_1_week_sensor\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(*) INTO \u0026quot;rp_1_week\u0026quot;.\u0026quot;sensor\u0026quot; FROM \u0026quot;autogen\u0026quot;.\u0026quot;sensor\u0026quot; GROUP BY time(30m),* END  Third level The third and final level is kept infinitely, where the mean value of 1 hour is used. Data here will be called mean_mean_value due to the wildcard.\nCREATE RETENTION POLICY \u0026quot;rp_infinite\u0026quot; ON \u0026quot;archive\u0026quot; DURATION INF REPLICATION 1 CREATE CONTINUOUS QUERY \u0026quot;cq_into_infinity_sensor\u0026quot; ON \u0026quot;archive\u0026quot; BEGIN SELECT mean(*) INTO \u0026quot;archive\u0026quot;.\u0026quot;rp_infinite\u0026quot;.\u0026quot;sensor\u0026quot; FROM \u0026quot;archive\u0026quot;.\u0026quot;rp_1_week\u0026quot;.\u0026quot;sensor\u0026quot; GROUP BY time(1h),* END  Improvements I\u0026rsquo;m currently more or less running the above setup, but with all duration for retention policy on archive set to INF. Raw data will still be deleted after 7 days. I\u0026rsquo;ll let this run for a week or so before I decide if I need to make any modifications.\n","date":1597169520,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597394760,"objectID":"4e9dbb29aa578c494dd47eeaaeafd753","permalink":"https://baberg.nu/personal/en/post/influxdb-retention/","publishdate":"2020-08-11T20:12:00+02:00","relpermalink":"/personal/en/post/influxdb-retention/","section":"post","summary":"Archive data in InfluxDB","tags":["InfluxDB","Home Assistant"],"title":"InfluxDB and retention","type":"post"},{"authors":["Fredrik Baberg"],"categories":["Proxmox"],"content":"Since I sometimes setup new Alpine Linux VMs in Proxmox, I thought I would document the base setup I use. In this case install of Qemu Guest Agent and Docker.\n Create VM with Alpine Linux, remember to enable qemu-agent. For Qemu Guest Agent:  Install Qemu Guest Agent through apk add --no-cache qemu-guest-agent run rc-update add local default create file /etc/local.d/Qemu.start with content (make sure to check port, it could be something else):    #!/bin/sh qemu-ga -d -p /dev/vport1p1\n    Make file executable chmod +x /etc/local.d/Qemu.start   For Docker  Uncomment community from /etc/apk/repositories Install through apk add --no-cache docker docker-compose Launch daemon at boot through rc-update add docker boot    ","date":1590584040,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593167760,"objectID":"bddfd00d3284b751fb38daa71dc0541a","permalink":"https://baberg.nu/personal/en/post/alpine-proxmox/","publishdate":"2020-05-27T14:54:00+02:00","relpermalink":"/personal/en/post/alpine-proxmox/","section":"post","summary":"Alpine Linux and Proxmox","tags":["Alpine","Proxmox"],"title":"Alpine Linux and Proxmox","type":"post"},{"authors":["Fredrik Baberg"],"categories":["ZeroTier-One"],"content":"As an alternative to running a VPN connection, I\u0026rsquo;m now trying ZeroTier-One.\nThis is how I made it work:\n Add community repository (uncomment line in /etc/apk/repositories)   apk add zerotier-one apk add iptables /etc/init.d/zerotier-one start zerotier-cli join #network-id add net.ipv4.ip_forward = 1 to /etc/sysctl.conf\n  accept join in my.zerotier.com portal  The create the following script, ZerotierRouting.start https://www.reddit.com/r/zerotier/comments/9714a2/easy_way_of_bridging_lan_for_remote_access/?sort=old, remember to replace network interface names with correct names:\n #!/bin/sh /etc/init.d/zerotier-one start iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE iptables -A FORWARD -i eth0 -o ztXXXXXXXX -m state \u0026ndash;state RELATED,ESTABLISHED -j ACCEPT iptables -A FORWARD -i ztXXXXXXXX -o eth0 -j ACCEPT\n Enable local.d scripts at boot time and add the script (https://unix.stackexchange.com/questions/442020/alpine-linux-run-a-startup-script-to-change-the-etc-issue):\n rc-update add local default mv ZerotierRouting.start /etc/local.d/ZerotierRouting.start chmod +x /etc/local.d/ZerotierRouting.start\n Finally, go to my.zerotier.com portal and add a route with destination 192.168.1.0/24 (via) 10.1.2.3 (set destination to desired network, via IP to your Alpine Linux/Zerotier IP address).\n","date":1590579720,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590579720,"objectID":"e4435f9e8bdc89f43c3678664c4a6a4c","permalink":"https://baberg.nu/personal/en/post/zerotier/","publishdate":"2020-05-27T13:42:00+02:00","relpermalink":"/personal/en/post/zerotier/","section":"post","summary":"ZeroTier One as VPN Bridge","tags":["ZeroTier-One","VPN"],"title":"ZeroTier-One","type":"post"},{"authors":["Fredrik Baberg"],"categories":["OctoPrint","HomeAssistant","Docker"],"content":"I\u0026rsquo;ve previously published an addon for Home Assistant, enabling the use of OctoPrint on the same device. There is now a version called \u0026ldquo;Experimental\u0026rdquo; which is my latest update. It adds features such as Ingress\nSome of the challenges has been to make Ingress work, which I believe is resolved now, but also to keep the file size low. The latest published version (0.3.0-alpha4) is using Python3 to save space. I intended to replace supervisord with s6, but have not been able to make it run properly.\nThe addon is available on GitHub.\n","date":1588054500,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588054500,"objectID":"ceac480138858e84acd254cbf7e583ed","permalink":"https://baberg.nu/personal/en/post/octoprint-ha/","publishdate":"2020-04-28T08:15:00+02:00","relpermalink":"/personal/en/post/octoprint-ha/","section":"post","summary":"Addon for OctoPrint in Home Assistant","tags":["OctoPrint","HomeAssistant"],"title":"OctoPrint in Home Assistant","type":"post"},{"authors":["Fredrik Baberg"],"categories":["ReadyNAS"],"content":"After trying to setup VPN on my current router (which doesn\u0026rsquo;t really support that), I saw that it was possible to install a VPN server on my ReadyNAS. In short, this is how I did:\n Get the VPN addon, either from the app store on the NAS or from this page. If it\u0026rsquo;s visible in the app store in ReadyNAS UI, just install it, otherwise you need to upload the .deb file to install it.  At first it was a bit unclear to me how to use this addon. A shared folder will be created, called vpnserver, in which there is a setup file for a management tool. Just install this tool, and you should be able to configure the server.   Since the version is a bit old by now, I wanted to install a newer version. I followed the following instructions.  Stop the VPN server using the ReadyNAS web administration tool, since the files will be updated. Enable SSH root access. This probably voids your warranty, but since my NAS is a few years by now I\u0026rsquo;m OK with that. There is an option to enable SSH access in the web UI. Don\u0026rsquo;t forget to set an admin password, to be able to sign in. SSH into NAS with user root. Install tools for compiling: apt-get update \u0026amp;\u0026amp; apt-get install make libc6-dev gcc gdb libtag1-dev uuid-dev Download newer version of the VPN server from the softether webpage, to the NAS. From softether download: VPN Server, Linux, arm-eabi 32-bit in my case (RN104). Not sure for how long the link will work, but just to have examples: wget http://www.softether-download.com/files/softether/v4.25-9656-rtm-2018.01.15-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz Unpack the archive into vpnserver folder: tar -xvf softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz -C /apps/vpnserver/bin/arm --strip-components=1 Compile new version: cd /apps/vpnserver/bin/arm \u0026amp;\u0026amp; ./.install.sh Note that the filename is .install.sh, so it is normally hidden. Copy the newly compiled files one level up. I\u0026rsquo;m not clear on why this is needed, but it says so. cp -R /apps/vpnserver/bin/arm/* /apps/vpnserver/bin/ Update ownership of the bin folder, since it is now (partially) owned by root. cd /apps/vpnserver \u0026amp;\u0026amp; chown -R admin:admin bin/ Remove previously downloaded archive (cleanup). rm ~/softether-vpnserver-v4.25-9656-rtm-2018.01.15-linux-arm_eabi-32bit.tar.gz Start VPN server again using web UI. As the version was updated, make sure to download and run the latest VPN server manager from the softether website.    ","date":1518365526,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1518365526,"objectID":"0943e06e8740171c8b9620d8043ba55a","permalink":"https://baberg.nu/personal/en/post/vpn-on-nas/","publishdate":"2018-02-11T17:12:06+01:00","relpermalink":"/personal/en/post/vpn-on-nas/","section":"post","summary":"After trying to setup VPN on my current router (which doesn\u0026rsquo;t really support that), I saw that it was possible to install a VPN server on my ReadyNAS. In short, this is how I did:","tags":["VPN","ReadyNAS"],"title":"VPN server on ReadyNAS","type":"post"}]